{"version":3,"file":"static/js/925.0e82656e.chunk.js","mappings":"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","sources":["PagesOP/OPChefOrderTaking.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPGroupButton } from '../ComponentOP/OPGroupButton';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { OPVerticalTable } from '../ComponentOP/OPVerticalTable';\r\nimport { io } from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const OPChefOrderTaking = () => {\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [sideBar, setSideBar] = useState(false);\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlBench = useRef({});\r\n    const tbl_menu = useRef([]);\r\n    const responce_data = useRef([]);\r\n\r\n    const socketUrl = `https://canteen-billing-1.onrender.com`\r\n    const socketRef = useRef(null);\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n\r\n    function initControl(responceData) {\r\n        let ctlArray = [\r\n            {\r\n                /*btn:cross : 0*/\r\n                arrayindex: 0,\r\n                csstheme: {\r\n                    labletext: \"\",\r\n                    classname: \"btn-close custom-btn-close border p-1 me-0 d-flex align-items-center justify-content-center rounded-circle\",\r\n                    id: \"btn_cross\",\r\n                    icon: \"ti ti-x\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:Take : 1*/\r\n                arrayindex: 1,\r\n                csstheme: {\r\n                    labletext: \" Take\",\r\n                    classname: \"btn btn-primary\",\r\n                    id: \"btn_take\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cancel : 2*/\r\n                arrayindex: 2,\r\n                csstheme: {\r\n                    labletext: \"Cancel\",\r\n                    classname: \"btn btn-light me-2\",\r\n                    id: \"btn_cancel\",\r\n                },\r\n            },\r\n        ]\r\n        ctlAttribute.current = ctlArray;\r\n        fnCreateBench(responceData.hotelBench);\r\n        fnBuildMenuList();\r\n        setStartRender(true);\r\n        setStartLoader(false);\r\n    }\r\n    function fnCreateBench(l_responceData) {\r\n        responce_data.current = l_responceData;\r\n        console.log(l_responceData)\r\n        const benchlst = l_responceData\r\n            .filter(sts => sts.status == \"waiting\")\r\n\r\n        let l_bench = {\r\n            groupbtnname: \"beanchlst\",\r\n            groupbtnselectedname: null,\r\n            groupbtndata: benchlst\r\n        }\r\n        ctlBench.current = l_bench;\r\n    }\r\n\r\n    function fnBuildMenuList() {\r\n        let l_tbl_menu = {\r\n            tablename: \"tbl_orderlist\",\r\n            grpbtnrowid: null,\r\n            grpbtnindex: null,\r\n            tableindex: null,\r\n            actionButton: {\r\n                hasAction: true,\r\n                hasStatus: true,\r\n                canEditRow: true,\r\n                canDeleteRow: true,\r\n            },\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Orders\",\r\n                    h_width: \"200px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"Qty\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 2,\r\n                    h_name: \"Customization\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 3,\r\n                    h_name: \"Sts\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: [],\r\n        };\r\n        tbl_menu.current = l_tbl_menu;\r\n    }\r\n\r\n    function fnTakeSelectedButton() {\r\n        const docId = tbl_menu.current.grpbtnrowid;\r\n        const removableIndex = tbl_menu.current.grpbtnindex;\r\n        const newContent = tbl_menu.current.tableData.map(item => ({\r\n            showrow: item.showrow,\r\n            table_value: [\r\n                {\r\n                    t_key: 0,\r\n                    t_value: item.table_value[0].t_value\r\n                },\r\n                {\r\n                    t_key: 1,\r\n                    t_value: item.table_value[1].t_value\r\n                },\r\n                {\r\n                    t_key: 2,\r\n                    t_value: item.table_value[2].t_value\r\n                },\r\n                {\r\n                    t_key: 3,\r\n                    t_value: \"Processing\"\r\n                },\r\n            ]\r\n        }));\r\n        const cheifName = getAppStoreData.username;\r\n        ctlBench.current.groupbtndata.splice(removableIndex, 1)\r\n        socketRef.current.emit('updateChefOrderTaking', docId, newContent, cheifName);\r\n\r\n        document.body.style = \"\";\r\n        setSideBar(false);\r\n    }\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n\r\n        switch (btn_id) {\r\n            case \"btn_cross\":\r\n            case \"blurdiv\":\r\n            case \"btn_cancel\":\r\n                document.body.style = \"\";\r\n                setSideBar(false);\r\n                break;\r\n            case \"btn_take\":\r\n                fnTakeSelectedButton();\r\n                break;\r\n        }\r\n    }\r\n    function handleGroupButtonClick(groupBtnName, index) {\r\n\r\n        switch (groupBtnName) {\r\n            case \"beanchlst\":\r\n                document.body.style.overflow = \"hidden\";\r\n                const clonedData = structuredClone(ctlBench.current.groupbtndata[index].btn_values);\r\n                ctlBench.current.groupbtnselectedname = ctlBench.current.groupbtndata[index].studentName;\r\n                tbl_menu.current.grpbtnrowid = ctlBench.current.groupbtndata[index]._id;\r\n                tbl_menu.current.grpbtnindex = index;\r\n                tbl_menu.current.tableData = clonedData;\r\n                break;\r\n        }\r\n        setSideBar(true);\r\n    }\r\n    function handleTableActionClick(tablename, index, rowmode, rowaction) {\r\n        switch (tablename) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // Initialize the socket connection only once\r\n        socketRef.current = io(socketUrl);\r\n\r\n        // Emit event to start server order placing\r\n        socketRef.current.emit('joinChefOrderTaking', getAppStoreData.companyName);\r\n\r\n        // Listen for the 'sendChefrOrderTaking' event from the server (runs only once)\r\n        socketRef.current.on('sendChefrOrderTaking', (responceData) => {\r\n            initControl(responceData);\r\n        });\r\n\r\n        // Cleanup: Disconnect the socket when the component unmounts\r\n        return () => {\r\n            if (socketRef.current) {\r\n                socketRef.current.disconnect();\r\n            }\r\n        };\r\n    }, []); // Empty dependency array, only runs once when the component mounts\r\n\r\n    useEffect(() => {\r\n        // Listen for the 'documentUpdated' event continuously\r\n        socketRef.current.on('documentUpdated', (docId, newContent, status) => {\r\n            if (status == \"waiting\") {\r\n                ctlBench.current.groupbtndata.push(newContent);\r\n                setRerender(prevRerender => !prevRerender);\r\n            }\r\n\r\n        });\r\n        return () => {\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    pending orders\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\" id='card-body'>\r\n                                                    <div className='border-bottom mb-3 pb-3'>\r\n                                                        <h5 className='fw-semibold mb-1'>\r\n                                                            Order's\r\n                                                        </h5>\r\n                                                        <p>Choose the order that needs to be prepared</p>\r\n                                                    </div>\r\n                                                    <OPGroupButton\r\n                                                        groupBtnName={ctlBench.current.groupbtnname}\r\n                                                        groupBtnData={ctlBench.current.groupbtndata}\r\n                                                        handleGroupButtonClick={handleGroupButtonClick}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                    <div className={`offcanvas offcanvas-end offcanvas-large ${(sideBar ? \"show\" : \"hiding\")}`}>\r\n                        {sideBar && (\r\n                            <>\r\n                                <div className='offcanvas-header border-bottom'>\r\n                                    <h4>{ctlBench.current.groupbtnselectedname}</h4>\r\n                                    <OPButton\r\n                                        ctl_Attribute={ctlAttribute.current[0]}\r\n                                        handleButtonClick={handleButtonClick}\r\n                                    />\r\n                                </div>\r\n                                <div className='offcanvas-body'>\r\n                                    <h4>Order</h4>\r\n                                    <OPVerticalTable\r\n                                        tablename={tbl_menu.current.tablename}\r\n                                        actionButton={tbl_menu.current.actionButton}\r\n                                        tableMetaData={tbl_menu.current.tableMetaData}\r\n                                        colMetaData={tbl_menu.current.colMetaData}\r\n                                        tableData={tbl_menu.current.tableData}\r\n                                        handleTableActionClick={handleTableActionClick}\r\n                                    />\r\n                                    <div className=\"mt-4 d-flex justify-content-end\" >\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[2]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[1]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    {sideBar && (\r\n                        <div className='offcanvas-backdrop fade show' id='blurdiv' onClick={handleButtonClick} ></div>\r\n                    )}\r\n\r\n                </>\r\n            )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPChefOrderTaking","startRender","setStartRender","useState","startLoader","setStartLoader","sideBar","setSideBar","rerender","setRerender","ctlAttribute","useRef","ctlBench","tbl_menu","responce_data","socketRef","getAppStoreData","OPValidations","useSelector","state","appstate","login_info","initControl","responceData","current","arrayindex","csstheme","labletext","classname","id","icon","l_responceData","console","log","l_bench","groupbtnname","groupbtnselectedname","groupbtndata","filter","sts","status","fnCreateBench","hotelBench","l_tbl_menu","tablename","grpbtnrowid","grpbtnindex","tableindex","actionButton","hasAction","hasStatus","canEditRow","canDeleteRow","tableMetaData","showPagination","showSearch","colMetaData","h_colindex","h_name","h_width","h_txtalign","h_navigate","tableData","fnBuildMenuList","handleButtonClick","e","currentTarget","document","body","style","docId","removableIndex","newContent","map","item","showrow","table_value","t_key","t_value","cheifName","username","splice","emit","fnTakeSelectedButton","useEffect","io","companyName","on","disconnect","push","prevRerender","_jsxs","_Fragment","children","_jsx","OPLoader","className","OPGroupButton","groupBtnName","groupBtnData","handleGroupButtonClick","index","overflow","clonedData","structuredClone","btn_values","studentName","_id","OPButton","ctl_Attribute","OPVerticalTable","handleTableActionClick","rowmode","rowaction","onClick"],"sourceRoot":""}