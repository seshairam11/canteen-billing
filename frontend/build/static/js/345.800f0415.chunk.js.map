{"version":3,"file":"static/js/345.800f0415.chunk.js","mappings":"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","sources":["PagesOP/OPSeverOrderCompleted.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPGroupButton } from '../ComponentOP/OPGroupButton';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { OPLocalSearchBar } from '../ComponentOP/OPLocalSearchBar';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\nimport { OPVerticalTable } from '../ComponentOP/OPVerticalTable';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const OPServerOrderCompleted = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [sideBar, setSideBar] = useState(false);\r\n    const [addOrder, setAddOrder] = useState(false);\r\n    const [rerender, setRerender] = useState(false);\r\n    const [completed, setCompleted] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlBench = useRef({});\r\n    const tbl_menu = useRef([]);\r\n    const responce_data = useRef([]);\r\n\r\n    const socketUrl = `https://canteen-billing.onrender.com`\r\n    const socketRef = useRef(null);\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n\r\n    function initControl(responseData) {\r\n        const MenuList = responseData.menuList.map((item) => ({\r\n            m_key: item._id,\r\n            m_value: item.menuItem\r\n        }))\r\n\r\n        let ctlArray = [\r\n            {\r\n                /*txt: Menu : 0*/\r\n                arrayindex: 0,\r\n                csstheme: {\r\n                    labletext: \"Menu\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_test\",\r\n                    length: 50,\r\n                    readonly: false,\r\n                    hinttext: \"Enter your Order\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"right\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"searchBox\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n                dropdownlist: MenuList,\r\n            },\r\n            {\r\n                /*txt: Quantity : 1*/\r\n                arrayindex: 1,\r\n                csstheme: {\r\n                    labletext: \"Qty\",\r\n                    classname: \"form-control\",\r\n                    id: \"num_qty\",\r\n                    length: 2,\r\n                    readonly: false,\r\n                    hinttext: \"Enter your Quantity\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"numeric\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cross : 2*/\r\n                arrayindex: 2,\r\n                csstheme: {\r\n                    labletext: \"\",\r\n                    classname: \"btn-close\",\r\n                    id: \"btn_crosssearch\",\r\n                    icon: \"ti ti-x\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cancel_delete : 3*/\r\n                arrayindex: 3,\r\n                csstheme: {\r\n                    labletext: \"cancel\",\r\n                    classname: \"btn btn-light me-2\",\r\n                    id: \"btn_cancel_search\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:confirm_search : 4*/\r\n                arrayindex: 4,\r\n                csstheme: {\r\n                    labletext: \"Confirm\",\r\n                    classname: \"btn btn-danger\",\r\n                    id: \"btn_confirm_search\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cross : 5*/\r\n                arrayindex: 5,\r\n                csstheme: {\r\n                    labletext: \"\",\r\n                    classname: \"btn-close custom-btn-close border p-1 me-0 d-flex align-items-center justify-content-center rounded-circle\",\r\n                    id: \"btn_cross\",\r\n                    icon: \"ti ti-x\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:Add Order : 6*/\r\n                arrayindex: 6,\r\n                csstheme: {\r\n                    labletext: \"Add Order\",\r\n                    classname: \"label-add btn2lnk\",\r\n                    id: \"btn_addorder\",\r\n                    icon: \"ti ti-square-rounded-plus\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:Save : 7*/\r\n                arrayindex: 7,\r\n                csstheme: {\r\n                    labletext: \" Save\",\r\n                    classname: \"btn btn-primary\",\r\n                    id: \"btn_save\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cancel : 8*/\r\n                arrayindex: 8,\r\n                csstheme: {\r\n                    labletext: \"Cancel\",\r\n                    classname: \"btn btn-light me-2\",\r\n                    id: \"btn_cancel\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cancel : 9*/\r\n                arrayindex: 9,\r\n                csstheme: {\r\n                    labletext: \"Delete\",\r\n                    classname: \"btn btn-primary me-2\",\r\n                    id: \"btn_completed\",\r\n                },\r\n            },\r\n        ]\r\n        ctlAttribute.current = ctlArray;\r\n        fnCreateBench(responseData.hotelBench);\r\n        fnBuildMenuList();\r\n        setStartRender(true);\r\n        setStartLoader(false);\r\n    }\r\n    function fnCreateBench(l_responceData) {\r\n        responce_data.current = l_responceData;\r\n        const benchlst = l_responceData\r\n            .filter(sts => sts.status == \"close\")\r\n\r\n        let l_bench = {\r\n            groupbtnname: \"beanchlst\",\r\n            groupbtnselectedname: null,\r\n            groupbtndata: benchlst\r\n        }\r\n        ctlBench.current = l_bench;\r\n\r\n    }\r\n\r\n    function fnBuildMenuList() {\r\n        let l_tbl_menu = {\r\n            tablename: \"tbl_orderlist\",\r\n            grpbtnrowid: null,\r\n            grpbtnindex: null,\r\n            tableindex: null,\r\n            actionButton: {\r\n                hasAction: true,\r\n                hasStatus: true,\r\n                canEditRow: true,\r\n                canDeleteRow: true,\r\n            },\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Orders\",\r\n                    h_width: \"200px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"Qty\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"Customization\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 2,\r\n                    h_name: \"Sts\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: [],\r\n        };\r\n        tbl_menu.current = l_tbl_menu\r\n    }\r\n    function fnTableOrderList(index, rowmode, rowaction) {\r\n        if (rowaction === 2) {\r\n            tbl_menu.current.tableData.splice(index, 1);\r\n            setRerender(!rerender)\r\n        } else if (rowaction === 1) {\r\n            tbl_menu.current.tableaction = 1;\r\n            tbl_menu.current.tableindex = index;\r\n            let t_data = tbl_menu.current.tableData[index].table_value\r\n            ctlAttribute.current[0].inputvalue = t_data[0].t_value\r\n            ctlAttribute.current[1].inputvalue = t_data[1].t_value\r\n            setAddOrder(true);\r\n        }\r\n    }\r\n    function fnConfirmOrder() {\r\n        let canFormSubmit = true;\r\n        let err = [];\r\n        let l_validate = [];\r\n        err.push(validate(ctlAttribute.current[0]));\r\n        err.push(validate(ctlAttribute.current[1]));\r\n\r\n        for (let i = 0; i < err.length; i++) {\r\n            if (err[i].founderror === true) {\r\n                canFormSubmit = false;\r\n                ctlAttribute.current[err[i].arrayindex].error.errorshow = true;\r\n                l_validate.push(err[i])\r\n            }\r\n        }\r\n        if (canFormSubmit === false) {\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isvalidation = false;\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isfocus.focus();\r\n            setRerender(!rerender);\r\n        }\r\n        else {\r\n            let l_tableValues = [\r\n                {\r\n                    t_key: 0,\r\n                    t_value: ctlAttribute.current[0].inputvalue,\r\n                },\r\n                {\r\n                    t_key: 1,\r\n                    t_value: ctlAttribute.current[1].inputvalue,\r\n                },\r\n            ]\r\n            if (tbl_menu.current.tableaction === 0) {\r\n                let l_tableThirdvalue = [\r\n                    {\r\n                        t_key: 2,\r\n                        t_value: \"New\",\r\n                    }\r\n                ]\r\n                tbl_menu.current.tableData.push({\r\n                    showrow: true,\r\n                    rowmode: 0,\r\n                    table_value: l_tableValues.concat(l_tableThirdvalue),\r\n                })\r\n            } else if (tbl_menu.current.tableaction === 1) {\r\n                let l_tableThirdvalue = tbl_menu.current.tableData[tbl_menu.current.tableindex].table_value[2]\r\n                let l_tableData = {\r\n                    showrow: true,\r\n                    rowmode: 1,\r\n                    table_value: l_tableValues.concat(l_tableThirdvalue),\r\n                }\r\n                tbl_menu.current.tableData.splice(tbl_menu.current.tableindex, 1, l_tableData)\r\n            }\r\n            ctlAttribute.current[0].inputvalue = \"\";\r\n            ctlAttribute.current[1].inputvalue = \"\";\r\n            setCompleted(true);\r\n            setAddOrder(false);\r\n        }\r\n    }\r\n    function fnSaveSelectedButton() {\r\n        const docId = tbl_menu.current.grpbtnrowid;\r\n        const index = ctlBench.current.groupbtndata.findIndex(item => item._id === docId);\r\n        ctlBench.current.groupbtndata.splice(index, 1)\r\n\r\n        socketRef.current.emit('deleteServerOrderCompleted', docId);\r\n        document.body.style = \"\";\r\n        setSideBar(false);\r\n    }\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        console.log(btn_id);\r\n\r\n        switch (btn_id) {\r\n            case \"btn_addorder\":\r\n                tbl_menu.current.tableaction = 0;\r\n                tbl_menu.current.tableindex = null;\r\n                setAddOrder(true)\r\n                break;\r\n            case \"btn_cross\":\r\n            case \"blurdiv\":\r\n            case \"btn_cancel\":\r\n                document.body.style = \"\";\r\n                setSideBar(false);\r\n                break;\r\n            case \"btn_completed\":\r\n                fnSaveSelectedButton();\r\n                break;\r\n            case \"btn_crosssearch\":\r\n            case \"btn_cancel_search\":\r\n                ctlAttribute.current[0].inputvalue = \"\";\r\n                ctlAttribute.current[0].error.errorshow = false;\r\n                ctlAttribute.current[1].inputvalue = \"\";\r\n                ctlAttribute.current[1].error.errorshow = false;\r\n                setAddOrder(false)\r\n                break;\r\n            case \"btn_confirm_search\":\r\n                fnConfirmOrder();\r\n                break;\r\n\r\n        }\r\n    }\r\n    function handleGroupButtonClick(groupBtnName, index) {\r\n        console.log(groupBtnName);\r\n        console.log(index);\r\n\r\n        switch (groupBtnName) {\r\n            case \"beanchlst\":\r\n                document.body.style.overflow = \"hidden\";\r\n                const clonedData = structuredClone(ctlBench.current.groupbtndata[index].btn_values);\r\n                ctlBench.current.groupbtnselectedname = ctlBench.current.groupbtndata[index].labelname;\r\n                tbl_menu.current.grpbtnrowid = ctlBench.current.groupbtndata[index]._id;\r\n                tbl_menu.current.tableData = clonedData;\r\n                break;\r\n        }\r\n        setSideBar(true);\r\n    }\r\n    function handleTableActionClick(tablename, index, rowmode, rowaction) {\r\n        switch (tablename) {\r\n            case \"tbl_orderlist\":\r\n                fnTableOrderList(index, rowmode, rowaction);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        // Initialize the socket connection\r\n        socketRef.current = io(socketUrl);\r\n\r\n        // Emit event to start server order placing\r\n        socketRef.current.emit('joinServerOrderCompleted', \"mgr orderup\", getAppStoreData.collageid);\r\n\r\n        // Listen for the 'menuList' event from the server\r\n        socketRef.current.on('sendServerOrderCompleted', (responseData) => {\r\n            initControl(responseData);\r\n            console.log(responseData)\r\n        });\r\n\r\n        socketRef.current.on('documentUpdated', (docId, newContent, status) => {\r\n            if (status == \"close\") {\r\n                console.log(newContent)\r\n                ctlBench.current.groupbtndata.push(newContent)\r\n                setRerender(prevRerender => !prevRerender);\r\n            }\r\n        })\r\n\r\n\r\n        // Cleanup: Disconnect the socket on component unmount\r\n        return () => {\r\n            if (socketRef.current) {\r\n                socketRef.current.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    Order Completed\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\" id='card-body'>\r\n                                                    <div className='border-bottom mb-3 pb-3'>\r\n                                                        <h5 className='fw-semibold mb-1'>\r\n                                                            Order's\r\n                                                        </h5>\r\n                                                        <p>Your order has been successfully completed!</p>\r\n                                                    </div>\r\n                                                    <OPGroupButton\r\n                                                        groupBtnName={ctlBench.current.groupbtnname}\r\n                                                        groupBtnData={ctlBench.current.groupbtndata}\r\n                                                        handleGroupButtonClick={handleGroupButtonClick}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                    {sideBar && (\r\n                        <div className='offcanvas-backdrop fade show' id='blurdiv' onClick={handleButtonClick} ></div>\r\n                    )}\r\n                    <div className={`offcanvas offcanvas-end offcanvas-large ${(sideBar ? \"show\" : \"hiding\")}`}>\r\n                        {sideBar && (\r\n                            <>\r\n                                <div className='offcanvas-header border-bottom'>\r\n                                    <h4>{ctlBench.current.groupbtnselectedname}</h4>\r\n                                    <OPButton\r\n                                        ctl_Attribute={ctlAttribute.current[5]}\r\n                                        handleButtonClick={handleButtonClick}\r\n                                    />\r\n                                </div>\r\n                                <div className='offcanvas-body'>\r\n                                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                        <h4>Order</h4>\r\n\r\n                                    </div>\r\n                                    <OPVerticalTable\r\n                                        tablename={tbl_menu.current.tablename}\r\n                                        actionButton={tbl_menu.current.actionButton}\r\n                                        tableMetaData={tbl_menu.current.tableMetaData}\r\n                                        colMetaData={tbl_menu.current.colMetaData}\r\n                                        tableData={tbl_menu.current.tableData}\r\n                                        handleTableActionClick={handleTableActionClick}\r\n                                    />\r\n                                    <div className=\"mt-4 d-flex justify-content-end\" >\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[9]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPServerOrderCompleted","startInit","setStartInit","useState","startRender","setStartRender","startLoader","setStartLoader","sideBar","setSideBar","addOrder","setAddOrder","rerender","setRerender","completed","setCompleted","ctlAttribute","useRef","ctlBench","tbl_menu","responce_data","socketRef","validate","OPValidations","getAppStoreData","useSelector","state","appstate","login_info","initControl","responseData","ctlArray","arrayindex","csstheme","labletext","classname","id","length","readonly","hinttext","inputvalue","tooltip","place","isfocus","errorshow","isvalidation","mandatory","datatype","error","errormsg","dropdownlist","menuList","map","item","m_key","_id","m_value","menuItem","icon","current","l_responceData","l_bench","groupbtnname","groupbtnselectedname","groupbtndata","filter","sts","status","fnCreateBench","hotelBench","l_tbl_menu","tablename","grpbtnrowid","grpbtnindex","tableindex","actionButton","hasAction","hasStatus","canEditRow","canDeleteRow","tableMetaData","showPagination","showSearch","colMetaData","h_colindex","h_name","h_width","h_txtalign","h_navigate","tableData","fnBuildMenuList","handleButtonClick","e","btn_id","currentTarget","console","log","tableaction","document","body","style","docId","index","findIndex","splice","emit","fnSaveSelectedButton","canFormSubmit","err","l_validate","push","i","founderror","focus","l_tableValues","t_key","t_value","l_tableThirdvalue","showrow","rowmode","table_value","concat","l_tableData","fnConfirmOrder","useEffect","io","collageid","on","newContent","prevRerender","disconnect","_jsxs","_Fragment","children","_jsx","OPLoader","className","OPGroupButton","groupBtnName","groupBtnData","handleGroupButtonClick","overflow","clonedData","structuredClone","btn_values","labelname","onClick","OPButton","ctl_Attribute","OPVerticalTable","handleTableActionClick","rowaction","t_data","fnTableOrderList"],"sourceRoot":""}