{"version":3,"file":"static/js/655.f0bbb473.chunk.js","mappings":"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","sources":["ComponentOP/OPDate.js","PagesOP/OPAddMenuCard.js"],"sourcesContent":["import \"../assets/plugins/tabler-icons/tabler-icons.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { Tooltip } from \"react-tooltip\";\r\n\r\nexport const OPDate = ({ ctl_Attribute, rerender }) => {\r\n\r\n    const [l_rerender, l_setRerender] = useState(false)\r\n    const validate = OPValidations();\r\n    useEffect(() => { }, [rerender]);\r\n\r\n    const handleOnFocus = (e) => {\r\n        e.currentTarget.setCustomValidity(\"\")\r\n        ctl_Attribute.tooltip.isvalidation = true;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        ctl_Attribute.error.errorshow = false;\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    function handleOnBlur(e) {\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        ctl_Attribute.tooltip.isvalidation = false;\r\n        let err = validate(ctl_Attribute);\r\n        if (err.founderror == true) {\r\n            ctl_Attribute.error.errormsg = err.errmsg;\r\n            ctl_Attribute.error.errorshow = true;\r\n            e.currentTarget.setCustomValidity(err.errmsg)\r\n        }\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={ctl_Attribute.csstheme.id} className=\"col-form-label \">{ctl_Attribute.csstheme.labletext}{ctl_Attribute.validate.mandatory ? (<span className=\"text-danger\">&nbsp;*</span>) : null}</label>\r\n            <input\r\n                ref={(el) => {\r\n                    ctl_Attribute.tooltip.isfocus = el\r\n                    ctl_Attribute.tooltip.errorshow = el\r\n                }}\r\n                className={`${ctl_Attribute.csstheme.classname} ${ctl_Attribute.error.errorshow ? \"err-border\" : \"\"}`}\r\n                type=\"date\"\r\n                data-tooltip-content={ctl_Attribute.error.errorshow ? ctl_Attribute.error.errormsg : ctl_Attribute.csstheme.hinttext}\r\n                data-tooltip-id={ctl_Attribute.csstheme.id}\r\n                data-tooltip-place={ctl_Attribute.tooltip.place}\r\n                data-tooltip-class-name={ctl_Attribute.tooltip.classname}\r\n                readOnly={ctl_Attribute.csstheme.readonly}\r\n                id={ctl_Attribute.csstheme.id}\r\n                disabled={ctl_Attribute.csstheme.readonly}\r\n                maxLength={ctl_Attribute.csstheme.length}\r\n                onBlur={handleOnBlur}\r\n                onFocus={handleOnFocus}\r\n                value={ctl_Attribute.inputvalue}\r\n                onChange={handleOnChange}\r\n                autoComplete=\"off\"\r\n            // required={ctl_Attribute.validate.mandatory}\r\n            />\r\n            <Tooltip id={ctl_Attribute.csstheme.id} isOpen={ctl_Attribute.tooltip.isvalidation} />\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useFetch from '../ApiOP/useFetch';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { OPNotification } from '../ComponentOP/OPNotification';\r\nimport { OPDate } from '../ComponentOP/OPDate';\r\n\r\nexport const OPAddMenuCard = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n    const [notify, setNotify] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlNotify = useRef({})\r\n\r\n    const navigate = useNavigate();\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n    const { responseData, isLoadingApi, apiKey, fetchError, serverRequest } = useFetch();\r\n\r\n\r\n    function initControl() {\r\n        let ctlArray = [\r\n            {\r\n                /*txt: Menu List  : 0*/\r\n                arrayindex: 0,\r\n                csstheme: {\r\n                    labletext: \"Menu Name\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_hotelname\",\r\n                    length: 20,\r\n                    readonly: false,\r\n                    hinttext: \"Enter your Menu Name \",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"alpha\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*txt: Price : 1*/\r\n                arrayindex: 1,\r\n                csstheme: {\r\n                    labletext: \"Price\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_Price\",\r\n                    length: 20,\r\n                    readonly: false,\r\n                    hinttext: \"Enter the menu price \",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"numeric\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*txt: stock-in date : 2*/\r\n                arrayindex: 2,\r\n                csstheme: {\r\n                    labletext: \"stock-in date\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_task\",\r\n                    length: 2,\r\n                    readonly: false,\r\n                    hinttext: \"Enter the stock-in date \",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: false,\r\n                    datatype: \"default\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*txt: Expiry Date : 3*/\r\n                arrayindex: 3,\r\n                csstheme: {\r\n                    labletext: \"Expiry Date\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_task\",\r\n                    length: 2,\r\n                    readonly: false,\r\n                    hinttext: \"Enter the Expiry Date \",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: false,\r\n                    datatype: \"default\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cross : 4*/\r\n                arrayindex: 4,\r\n                csstheme: {\r\n                    labletext: \"Save\",\r\n                    classname: \"btn btn-primary\",\r\n                    id: \"btn_save\",\r\n                },\r\n            }\r\n        ]\r\n        ctlAttribute.current = ctlArray;\r\n\r\n        setStartInit(false);\r\n        setStartRender(true);\r\n        setStartLoader(false);\r\n    }\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        console.log(btn_id);\r\n        switch (btn_id) {\r\n\r\n            case \"btn_save\":\r\n                fnSave();\r\n                break;\r\n        }\r\n    }\r\n    function fnSave() {\r\n        let canFormSubmit = true;\r\n        let err = [];\r\n        let l_validate = [];\r\n        err.push(validate(ctlAttribute.current[1]))\r\n        err.push(validate(ctlAttribute.current[0]))\r\n        console.log(err);\r\n\r\n        for (let i = 0; i < err.length; i++) {\r\n            if (err[i].founderror === true) {\r\n                canFormSubmit = false;\r\n                ctlAttribute.current[err[i].arrayindex].error.errorshow = true;\r\n                l_validate.push(err[i])\r\n            }\r\n        }\r\n        if (canFormSubmit === false) {\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isvalidation = true;\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isfocus.focus();\r\n            setRerender(!rerender);\r\n        } else {\r\n            setStartLoader(true);\r\n            fnSendData();\r\n        }\r\n    }\r\n    function fnSendData() {\r\n        console.log(getAppStoreData.burnerid)\r\n        let _getBody = {\r\n            menuItem: ctlAttribute.current[0].inputvalue,\r\n            price: Number(ctlAttribute.current[1].inputvalue),\r\n            importDate: ctlAttribute.current[2].inputvalue,\r\n            ExpiryDate: ctlAttribute.current[2].inputvalue,\r\n        }\r\n\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/addmenu\",\r\n            apikey: \"SAVE\"\r\n        };\r\n        console.log(_getBody);\r\n        serverRequest(serverRequestParam);\r\n    }\r\n    useEffect(() => {\r\n        if (startInit === true) {\r\n            initControl();\r\n        } else {\r\n            if (isLoadingApi) {\r\n                switch (apiKey) {\r\n                    case \"SAVE\":\r\n                        fnSaveResult();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [startInit, isLoadingApi]);\r\n\r\n    function fnSaveResult() {\r\n        console.log(responseData)\r\n        if (responseData.isAuth) {\r\n            ctlNotify.current = {\r\n                name: \"Menu Added Successfully\",\r\n                title: responseData.errormsg[0].menuItem,\r\n                photo: \"success\"\r\n            }\r\n            setNotify(true);\r\n\r\n        } else {\r\n            console.log(responseData.errormsg)\r\n        }\r\n        setStartLoader(false);\r\n    }\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <OPNotification\r\n                            nameProps={ctlNotify.current.name}\r\n                            titleProps={ctlNotify.current.title}\r\n                            photoProps={ctlNotify.current.photo}\r\n                            bool={notify}\r\n                        />\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    Add Menu's\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <div className='border-bottom mb-3 pb-3'>\r\n                                                        <h5 className='fw-semibold mb-1'>\r\n                                                            Canteen Menu list\r\n                                                        </h5>\r\n                                                        <p>Adding Menu Details to Menu List</p>\r\n                                                    </div>\r\n                                                    <div className=\"border-bottom mb-3\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-6\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[0]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[1]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPDate\r\n                                                                        ctl_Attribute={ctlAttribute.current[2]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPDate\r\n                                                                        ctl_Attribute={ctlAttribute.current[3]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='mt-4 d-flex justify-content-end'>\r\n                                                        <OPButton\r\n                                                            ctl_Attribute={ctlAttribute.current[4]}\r\n                                                            handleButtonClick={handleButtonClick}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPDate","_ref","ctl_Attribute","rerender","l_rerender","l_setRerender","useState","validate","OPValidations","useEffect","_jsxs","_Fragment","children","htmlFor","csstheme","id","className","labletext","mandatory","_jsx","ref","el","tooltip","isfocus","errorshow","classname","error","type","errormsg","hinttext","place","readOnly","readonly","disabled","maxLength","length","onBlur","e","inputvalue","currentTarget","value","isvalidation","err","founderror","errmsg","setCustomValidity","onFocus","onChange","autoComplete","Tooltip","isOpen","OPAddMenuCard","startInit","setStartInit","startRender","setStartRender","startLoader","setStartLoader","setRerender","notify","setNotify","ctlAttribute","useRef","ctlNotify","useNavigate","getAppStoreData","useSelector","state","appstate","login_info","responseData","isLoadingApi","apiKey","fetchError","serverRequest","useFetch","current","arrayindex","datatype","console","log","isAuth","name","title","menuItem","photo","fnSaveResult","OPLoader","OPNotification","nameProps","titleProps","photoProps","bool","OPTextBox","OPButton","handleButtonClick","btn_id","canFormSubmit","l_validate","push","i","focus","burnerid","_getBody","price","Number","importDate","ExpiryDate","serverRequestParam","method","headers","body","JSON","stringify","apiUrl","apikey","fnSendData","fnSave"],"sourceRoot":""}