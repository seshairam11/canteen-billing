{"version":3,"file":"static/js/891.882cd18c.chunk.js","mappings":"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","sources":["PagesOP/OPViewEmployees.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { useSelector } from 'react-redux';\r\nimport useFetch from '../ApiOP/useFetch';\r\nimport { OPNotification } from '../ComponentOP/OPNotification';\r\nimport { OPReadOnlyListTable } from '../ComponentOP/OPReadOnlyTable';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\nimport { OPDropDown } from '../ComponentOP/OPDropDown';\r\n\r\nexport const OPViewEmployees = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n    const [notify, setNotify] = useState(false);\r\n    const [listEmp, setListEmp] = useState(true);\r\n    const [viewEmp, setViewEmp] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlNotify = useRef({})\r\n    const tbl_empLst = useRef({})\r\n\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n    const { responseData, isLoadingApi, apiKey, fetchError, serverRequest } = useFetch();\r\n    function fnViewEmpRequest() {\r\n        let _getBody = {\r\n            companyName: getAppStoreData.companyName,\r\n        }\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/viewemployees\",\r\n            apikey: \"VIEWEMP\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n        setStartInit(false);\r\n    }\r\n\r\n    function initControl() {\r\n        console.log(responseData)\r\n        if (responseData.isAuth) {\r\n            let ctlArray = [\r\n                {\r\n                    /*txt: First Name  : 0*/\r\n                    arrayindex: 0,\r\n                    csstheme: {\r\n                        labletext: \"User Name\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_username\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Employee User name \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"username\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Last Name : 1*/\r\n                    arrayindex: 1,\r\n                    csstheme: {\r\n                        labletext: \"Email\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_emailid\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Employee Email Id\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"email\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Phone Number : 2*/\r\n                    arrayindex: 2,\r\n                    csstheme: {\r\n                        labletext: \"Phone no\",\r\n                        classname: \"form-control\",\r\n                        id: \"num_phoneno\",\r\n                        length: 10,\r\n                        readonly: true,\r\n                        hinttext: \"Enter your Phone Number\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"phoneno\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Employee Types : 3*/\r\n                    arrayindex: 3,\r\n                    csstheme: {\r\n                        labletext: \"Employee Types\",\r\n                        classname: \"form-control\",\r\n                        id: \"sel_Employeetypes\",\r\n                        readonly: true,\r\n                        hinttext:\r\n                            \"Select the usertype for Employee\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"right\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"dropdown\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                    dropdata: [\r\n                        {\r\n                            keylistid: \"11000\",\r\n                            keylistvalue: \"Server\"\r\n                        },\r\n                        {\r\n                            keylistid: \"11001\",\r\n                            keylistvalue: \"Chef\"\r\n                        },\r\n                        {\r\n                            keylistid: '11002',\r\n                            keylistvalue: \"Casher\"\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    /*txt: Password : 4*/\r\n                    arrayindex: 4,\r\n                    csstheme: {\r\n                        labletext: \"Password\",\r\n                        classname: \"form-control\",\r\n                        id: \"text-email\",\r\n                        length: 50,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Employee Password\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"text\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Confirm Password : 5*/\r\n                    arrayindex: 5,\r\n                    csstheme: {\r\n                        labletext: \"Confirm Password\",\r\n                        classname: \"form-control\",\r\n                        id: \"text-confirmpassword\",\r\n                        length: 50,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Employee Confirm Password\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"dropdown\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:Save Changes : 6*/\r\n                    arrayindex: 6,\r\n                    csstheme: {\r\n                        labletext: \"Save Changes\",\r\n                        classname: \"btn btn-primary me-2\",\r\n                        id: \"btn_savechange\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:Edit : 7*/\r\n                    arrayindex: 7,\r\n                    csstheme: {\r\n                        labletext: \"Edit\",\r\n                        classname: \"btn btn-secondary me-2\",\r\n                        id: \"btn_edit\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:Delete : 8*/\r\n                    arrayindex: 8,\r\n                    csstheme: {\r\n                        labletext: \"Delete\",\r\n                        classname: \"btn btn-primary me-2\",\r\n                        id: \"btn_delete\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:Delete : 9*/\r\n                    arrayindex: 9,\r\n                    csstheme: {\r\n                        labletext: \"Cancel\",\r\n                        classname: \"btn btn-light me-2\",\r\n                        id: \"btn_cancel\",\r\n                    },\r\n                }\r\n            ]\r\n            ctlAttribute.current = ctlArray;\r\n            fnBuildEmployeesList(responseData.errormsg);\r\n            setStartRender(true);\r\n            setStartLoader(false);\r\n\r\n        } else {\r\n            console.log(responseData.errormsg);\r\n        }\r\n    }\r\n\r\n\r\n    function fnBuildEmployeesList(resTableData) {\r\n        const benchlst = resTableData\r\n            .map(item => ({\r\n                rowid: item._id,\r\n                showrow: true,\r\n                table_value: [\r\n                    {\r\n                        t_key: 0,\r\n                        t_value: item.userName.charAt(0).toUpperCase() + item.userName.slice(1),\r\n                    },\r\n                    {\r\n                        t_key: 1,\r\n                        t_value: item.employeeType,\r\n                    },\r\n                    {\r\n                        t_key: 2,\r\n                        t_value: item.mailID,\r\n                    },\r\n                    {\r\n                        t_key: 3,\r\n                        t_value: item.phone,\r\n                    },\r\n                ]\r\n            }))\r\n\r\n        let l_tbl_empLst = {\r\n            tablename: \"tbl_orderlist\",\r\n            tableindex: null,\r\n            tabledataid: null,\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Employee's\",\r\n                    h_width: \"150px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"User Type\",\r\n                    h_width: \"43px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 2,\r\n                    h_name: \"Mail\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 3,\r\n                    h_name: \"Phone\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: benchlst,\r\n        };\r\n        tbl_empLst.current = l_tbl_empLst\r\n    }\r\n    function checkPassword(p1, p2) {\r\n        if (p1 === p2) {\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        switch (btn_id) {\r\n            case \"btn_cancel\":\r\n                setListEmp(true);\r\n                setViewEmp(false);\r\n                break;\r\n            case \"btn_delete\":\r\n                fnDeleteData();\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleClickTable(index) {\r\n        const employeeDetial = tbl_empLst.current.tableData[index];\r\n        tbl_empLst.current.tableindex = index;\r\n        tbl_empLst.current.tabledataid = employeeDetial.rowid;\r\n        ctlAttribute.current[0].inputvalue = employeeDetial.table_value[0].t_value\r\n        ctlAttribute.current[1].inputvalue = employeeDetial.table_value[2].t_value\r\n        ctlAttribute.current[2].inputvalue = employeeDetial.table_value[3].t_value\r\n        ctlAttribute.current[3].inputvalue = employeeDetial.table_value[1].t_value\r\n        setListEmp(false);\r\n        setViewEmp(true);\r\n    }\r\n\r\n    function fnDeleteData() {\r\n        tbl_empLst.current.tableData.splice(tbl_empLst.current.tableindex, 1);\r\n        let _getBody = {\r\n            _id: tbl_empLst.current.tabledataid,\r\n        }\r\n\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/deleteemployees\",\r\n            apikey: \"DELEMP\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n    }\r\n\r\n    function fnDeleteEmpResult() {\r\n        if (responseData.isAuth) {\r\n            ctlNotify.current = {\r\n                name: \"Employee Deleted Successfully\",\r\n                title: responseData.errormsg.userName,\r\n                photo:\"success\"\r\n            }\r\n            setViewEmp(false);\r\n            setListEmp(true);\r\n            setNotify(true);\r\n            setNotify(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (startInit === true) {\r\n            fnViewEmpRequest();\r\n        } else {\r\n            if (isLoadingApi) {\r\n                console.log(apiKey)\r\n                switch (apiKey) {\r\n                    case \"DELEMP\":\r\n                        fnDeleteEmpResult();\r\n                        break;\r\n                    case \"VIEWEMP\":\r\n                        initControl();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [startInit, isLoadingApi]);\r\n\r\n    useEffect(() => {\r\n        if (notify) {\r\n            const closeNotify = setInterval(() => {\r\n                setNotify(false);\r\n            }, 2000);\r\n            return () => clearInterval(closeNotify);\r\n        }\r\n    }, [notify]);\r\n\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <OPNotification\r\n                            nameProps={ctlNotify.current.name}\r\n                            titleProps={ctlNotify.current.title}\r\n                            photoProps={ctlNotify.current.photo}\r\n                            bool={notify}\r\n                        />\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    View Employee's\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {listEmp &&\r\n                                        < div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                View Employee's\r\n                                                            </h5>\r\n                                                            <p>Showing your Employees</p>\r\n                                                        </div>\r\n                                                        <OPReadOnlyListTable\r\n                                                            tablename={tbl_empLst.current.tablename}\r\n                                                            actionButton={tbl_empLst.current.actionButton}\r\n                                                            tableMetaData={tbl_empLst.current.tableMetaData}\r\n                                                            colMetaData={tbl_empLst.current.colMetaData}\r\n                                                            tableData={tbl_empLst.current.tableData}\r\n                                                            handleClickTable={handleClickTable}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                    {viewEmp &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                Employee User Details\r\n                                                            </h5>\r\n                                                            <p>Showing User Details in ReadOnly Method</p>\r\n                                                        </div>\r\n                                                        <div className=\"border-bottom mb-3\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[0]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[1]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[2]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPDropDown\r\n                                                                            ctl_Attribute={ctlAttribute.current[3]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='mt-4 d-flex justify-content-end'>\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[9]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[8]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPViewEmployees","startInit","setStartInit","useState","startRender","setStartRender","startLoader","setStartLoader","rerender","setRerender","notify","setNotify","listEmp","setListEmp","viewEmp","setViewEmp","ctlAttribute","useRef","ctlNotify","tbl_empLst","getAppStoreData","OPValidations","useSelector","state","appstate","login_info","responseData","isLoadingApi","apiKey","fetchError","serverRequest","useFetch","initControl","console","log","isAuth","ctlArray","arrayindex","csstheme","labletext","classname","id","length","readonly","hinttext","inputvalue","tooltip","place","isfocus","errorshow","isvalidation","validate","mandatory","datatype","error","errormsg","dropdata","keylistid","keylistvalue","current","resTableData","l_tbl_empLst","tablename","tableindex","tabledataid","tableMetaData","showPagination","showSearch","colMetaData","h_colindex","h_name","h_width","h_txtalign","h_navigate","tableData","map","item","rowid","_id","showrow","table_value","t_key","t_value","userName","charAt","toUpperCase","slice","employeeType","mailID","phone","fnBuildEmployeesList","handleButtonClick","e","currentTarget","splice","_getBody","serverRequestParam","method","headers","body","JSON","stringify","apiUrl","apikey","fnDeleteData","useEffect","companyName","fnViewEmpRequest","name","title","photo","closeNotify","setInterval","clearInterval","_jsxs","_Fragment","children","_jsx","OPLoader","className","OPNotification","nameProps","titleProps","photoProps","bool","OPReadOnlyListTable","actionButton","handleClickTable","index","employeeDetial","OPTextBox","ctl_Attribute","OPDropDown","OPButton"],"sourceRoot":""}