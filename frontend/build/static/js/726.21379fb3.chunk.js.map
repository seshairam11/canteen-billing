{"version":3,"file":"static/js/726.21379fb3.chunk.js","mappings":"sKAKO,MAAMA,EAASC,IAAkC,IAAjC,cAAEC,EAAa,SAAEC,GAAUF,EAE9C,MAAOG,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GACvCC,GAAWC,EAAAA,EAAAA,MACjBC,EAAAA,EAAAA,YAAU,QAAW,CAACN,IA0BtB,OACIO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,SAAOG,QAASX,EAAcY,SAASC,GAAIC,UAAU,kBAAiBJ,SAAA,CAAEV,EAAcY,SAASG,UAAWf,EAAcK,SAASW,WAAaC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,cAAaJ,SAAC,UAAkB,SAC9LO,EAAAA,EAAAA,KAAA,SACIC,IAAMC,IACFnB,EAAcoB,QAAQC,QAAUF,EAChCnB,EAAcoB,QAAQE,UAAYH,CAAE,EAExCL,UAAW,GAAGd,EAAcY,SAASW,aAAavB,EAAcwB,MAAMF,UAAY,aAAe,KACjGG,KAAK,OACL,uBAAsBzB,EAAcwB,MAAMF,UAAYtB,EAAcwB,MAAME,SAAW1B,EAAcY,SAASe,SAC5G,kBAAiB3B,EAAcY,SAASC,GACxC,qBAAoBb,EAAcoB,QAAQQ,MAC1C,0BAAyB5B,EAAcoB,QAAQG,UAC/CM,SAAU7B,EAAcY,SAASkB,SACjCjB,GAAIb,EAAcY,SAASC,GAC3BkB,SAAU/B,EAAcY,SAASkB,SACjCE,UAAWhC,EAAcY,SAASqB,OAClCC,OA9BZ,SAAsBC,GAClBnC,EAAcoC,WAAaD,EAAEE,cAAcC,MAC3CtC,EAAcoB,QAAQmB,cAAe,EACrC,IAAIC,EAAMnC,EAASL,GACG,GAAlBwC,EAAIC,aACJzC,EAAcwB,MAAME,SAAWc,EAAIE,OACnC1C,EAAcwB,MAAMF,WAAY,EAChCa,EAAEE,cAAcM,kBAAkBH,EAAIE,SAE1CvC,GAAeD,EACnB,EAqBY0C,QA3CWT,IACnBA,EAAEE,cAAcM,kBAAkB,IAClC3C,EAAcoB,QAAQmB,cAAe,EACrCpC,GAAeD,EAAW,EAyClBoC,MAAOtC,EAAcoC,WACrBS,SAvCYV,IACpBnC,EAAcwB,MAAMF,WAAY,EAChCtB,EAAcoC,WAAaD,EAAEE,cAAcC,MAC3CnC,GAAeD,EAAW,EAqClB4C,aAAa,SAGjB7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAO,CAAClC,GAAIb,EAAcY,SAASC,GAAImC,OAAQhD,EAAcoB,QAAQmB,iBACvE,C,uKClDJ,MAAMU,EAAiBA,KAC1B,MAAOC,EAAWC,IAAgB/C,EAAAA,EAAAA,WAAS,IACpCgD,EAAaC,IAAkBjD,EAAAA,EAAAA,WAAS,IACxCkD,EAAaC,IAAkBnD,EAAAA,EAAAA,WAAS,IACxCH,EAAUuD,IAAepD,EAAAA,EAAAA,WAAS,IAClCqD,EAAQC,IAAatD,EAAAA,EAAAA,WAAS,IAC9BuD,EAAUC,IAAexD,EAAAA,EAAAA,WAAS,IAClCyD,EAAUC,IAAe1D,EAAAA,EAAAA,WAAS,GAEnC2D,GAAeC,EAAAA,EAAAA,QAAO,IACtBC,GAAYD,EAAAA,EAAAA,QAAO,CAAC,GACpBE,GAAcF,EAAAA,EAAAA,QAAO,CAAC,GAGtBG,IADW7D,EAAAA,EAAAA,MACO8D,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASC,eACxD,aAAEC,EAAY,aAAEC,EAAY,OAAEC,EAAM,WAAEC,EAAU,cAAEC,IAAkBC,EAAAA,EAAAA,KAgB1E,SAASC,IACL,GAAIN,EAAaO,OAAQ,CACrB,IAAIC,EAAW,CACX,CAEIC,WAAY,EACZrE,SAAU,CACNG,UAAW,YACXQ,UAAW,eACXV,GAAI,gBACJoB,OAAQ,GACRH,UAAU,EACVH,SAAU,0BAEdS,WAAY,GACZhB,QAAS,CACLQ,MAAO,SACPL,UAAW,gBACXF,QAAS,GACTC,UAAW,GACXiB,cAAc,GAElBlC,SAAU,CACNW,WAAW,EACXkE,SAAU,SAEd1D,MAAO,CACHF,WAAW,EACXI,SAAU,2BAGlB,CAEIuD,WAAY,EACZrE,SAAU,CACNG,UAAW,QACXQ,UAAW,eACXV,GAAI,YACJoB,OAAQ,GACRH,UAAU,EACVH,SAAU,yBAEdS,WAAY,GACZhB,QAAS,CACLQ,MAAO,SACPL,UAAW,gBACXF,QAAS,GACTC,UAAW,GACXiB,cAAc,GAElBlC,SAAU,CACNW,WAAW,EACXkE,SAAU,WAEd1D,MAAO,CACHF,WAAW,EACXI,SAAU,2BAGlB,CAEIuD,WAAY,EACZrE,SAAU,CACNG,UAAW,SACXQ,UAAW,qBACXV,GAAI,eAGZ,CAEIoE,WAAY,EACZrE,SAAU,CACNG,UAAW,SACXQ,UAAW,kBACXV,GAAI,eAGZ,CAEIoE,WAAY,EACZrE,SAAU,CACNG,UAAW,cACXQ,UAAW,eACXV,GAAI,WACJoB,OAAQ,EACRH,UAAU,EACVH,SAAU,0BAEdS,WAAY,GACZhB,QAAS,CACLQ,MAAO,SACPL,UAAW,gBACXF,QAAS,GACTC,UAAW,GACXiB,cAAc,GAElBlC,SAAU,CACNW,WAAW,EACXkE,SAAU,WAEd1D,MAAO,CACHF,WAAW,EACXI,SAAU,2BAGlB,CAEIuD,WAAY,EACZrE,SAAU,CACNG,UAAW,cACXQ,UAAW,eACXV,GAAI,WACJoB,OAAQ,EACRH,UAAU,EACVH,SAAU,0BAEdS,WAAY,GACZhB,QAAS,CACLQ,MAAO,SACPL,UAAW,gBACXF,QAAS,GACTC,UAAW,GACXiB,cAAc,GAElBlC,SAAU,CACNW,WAAW,EACXkE,SAAU,WAEd1D,MAAO,CACHF,WAAW,EACXI,SAAU,4BAItBqC,EAAaoB,QAAUH,EAY/B,SAA8BI,GAC1BC,QAAQC,IAAIF,GAyBZ,IAAIG,EAAgB,CAChBC,UAAW,gBACXC,WAAY,KACZC,YAAa,KACbC,cAAe,CACXC,gBAAgB,EAChBC,YAAY,GAEhBC,YAAa,CACT,CACIC,WAAY,EACZC,OAAQ,SACRC,QAAS,QACTC,WAAY,OACZC,WAAY,SAEhB,CACIJ,WAAY,EACZC,OAAQ,QACRC,QAAS,OACTC,WAAY,OACZC,WAAY,SAEhB,CACIJ,WAAY,EACZC,OAAQ,cACRC,QAAS,OACTC,WAAY,OACZC,WAAY,SAEhB,CACIJ,WAAY,EACZC,OAAQ,cACRC,QAAS,OACTC,WAAY,OACZC,WAAY,UAGpBC,UA9DahB,EACZiB,KAAIC,IAAI,CACLC,IAAKD,EAAKC,IACVC,SAAS,EACTC,YAAa,CACT,CACIC,MAAO,EACPC,QAASL,EAAKM,UAElB,CACIF,MAAO,EACPC,QAASL,EAAKO,OAElB,CACIH,MAAO,EACPC,QAASL,EAAKQ,YAElB,CACIJ,MAAO,EACPC,QAASL,EAAKS,kBA6C9B7C,EAAYiB,QAAUI,CAC1B,CA9EQyB,CAAqBxC,EAAa9C,UAClC2B,GAAe,GACfE,GAAe,EAGnB,MACI8B,QAAQC,IAAId,EAAa9C,SAEjC,CAwEA,SAASuF,EAAkB9E,GAEvB,OADaA,EAAEE,cAAcxB,IAEzB,IAAK,aACD+C,GAAY,GACZE,GAAY,GACZ,MACJ,IAAK,cAkBb,WACII,EAAYiB,QAAQiB,UAAUc,OAAOhD,EAAYiB,QAAQM,WAAY,GACrE,IAAI0B,EAAW,CACXZ,IAAKrC,EAAYiB,QAAQO,aAGzB0B,EAAqB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,GACrBO,OAAQ,qBACRC,OAAQ,WAEZ/C,EAAcwC,EAClB,CA/BYQ,GAGZ,CAqEA,OA1BArH,EAAAA,EAAAA,YAAU,KACN,IAAkB,IAAd2C,GA7RR,WACI,IAAIiE,EAAW,CACXU,YAAa1D,EAAgB0D,aAE7BT,EAAqB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,GACrBO,OAAQ,mBACRC,OAAQ,YAEZ/C,EAAcwC,GACdjE,GAAa,EACjB,CAiRQ2E,QAEA,GAAIrD,EACA,OAAQC,GACJ,IAAK,UAlBbF,EAAaO,SACbd,EAAUkB,QAAU,CAChB4C,KAAM,4BACNC,MAAOxD,EAAa9C,SAASkF,SAC7BqB,MAAO,WAEXnE,GAAY,GACZF,GAAY,GACZF,GAAU,IAYE,MACJ,IAAK,WACDoB,IAIhB,GACD,CAAC5B,EAAWuB,KAEflE,EAAAA,EAAAA,YAAU,KACN,GAAIkD,EAAQ,CACR,MAAMyE,EAAcC,aAAY,KAC5BzE,GAAU,EAAM,GACjB,KACH,MAAO,IAAM0E,cAAcF,EAC/B,IACD,CAACzE,KAGAjD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACK4C,IAAgBrC,EAAAA,EAAAA,KAACoH,EAAAA,EAAQ,IACzBjF,IACGnC,EAAAA,EAAAA,KAAAR,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,eAAcJ,SAAA,EACzBO,EAAAA,EAAAA,KAACqH,EAAAA,EAAc,CACXC,UAAWtE,EAAUkB,QAAQ4C,KAC7BS,WAAYvE,EAAUkB,QAAQ6C,MAC9BS,WAAYxE,EAAUkB,QAAQ8C,MAC9BS,KAAMjF,KAEVxC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,UAASJ,UACpBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,MAAKJ,UAChBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,YAAWJ,SAAA,EACtBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaJ,UACxBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,yBAAwBJ,SAAA,EACnCO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUJ,UACrBO,EAAAA,EAAAA,KAAA,MAAIH,UAAU,aAAYJ,SAAC,sBAI/BO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBJ,UACjCO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAK1B6C,IACG1C,EAAAA,EAAAA,KAAA,OAAMH,UAAU,MAAKJ,UACjBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAWJ,UACtBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAMJ,UACjBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,YAAWJ,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0BAAyBJ,SAAA,EACpCO,EAAAA,EAAAA,KAAA,MAAIH,UAAU,mBAAkBJ,SAAC,iBAGjCO,EAAAA,EAAAA,KAAA,KAAAP,SAAG,0BAEPO,EAAAA,EAAAA,KAAC0H,EAAAA,EAAmB,CAChBnD,UAAWtB,EAAYiB,QAAQK,UAC/BoD,aAAc1E,EAAYiB,QAAQyD,aAClCjD,cAAezB,EAAYiB,QAAQQ,cACnCG,YAAa5B,EAAYiB,QAAQW,YACjCM,UAAWlC,EAAYiB,QAAQiB,UAC/ByC,iBAhHxD,SAA0BC,GACtB,MAAMC,EAAa7E,EAAYiB,QAAQiB,UAAU0C,GACjD5E,EAAYiB,QAAQM,WAAaqD,EACjC5E,EAAYiB,QAAQO,YAAcqD,EAAWxC,IAC7CxC,EAAaoB,QAAQ,GAAG/C,WAAa2G,EAAWtC,YAAY,GAAGE,QAC/D5C,EAAaoB,QAAQ,GAAG/C,WAAa2G,EAAWtC,YAAY,GAAGE,QAC/D5C,EAAaoB,QAAQ,GAAG/C,WAAa2G,EAAWtC,YAAY,GAAGE,QAC/D5C,EAAaoB,QAAQ,GAAG/C,WAAa2G,EAAWtC,YAAY,GAAGE,QAC/D/C,GAAY,GACZE,GAAY,EAChB,aA4GiCD,IACG5C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,MAAKJ,UAChBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAWJ,UACtBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAMJ,UACjBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,YAAWJ,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,0BAAyBJ,SAAA,EACpCO,EAAAA,EAAAA,KAAA,MAAIH,UAAU,mBAAkBJ,SAAC,kBAGjCO,EAAAA,EAAAA,KAAA,KAAAP,SAAG,gDAEPO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qBAAoBJ,UAC/BF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,MAAKJ,SAAA,EAChBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUJ,UACrBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAMJ,UACjBO,EAAAA,EAAAA,KAAC+H,EAAAA,EAAS,CACNhJ,cAAe+D,EAAaoB,QAAQ,GACpClF,SAAUA,SAItBgB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUJ,UACrBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAMJ,UACjBO,EAAAA,EAAAA,KAAC+H,EAAAA,EAAS,CACNhJ,cAAe+D,EAAaoB,QAAQ,GACpClF,SAAUA,SAItBgB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUJ,UACrBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAMJ,UACjBO,EAAAA,EAAAA,KAACnB,EAAAA,EAAM,CACHE,cAAe+D,EAAaoB,QAAQ,GACpClF,SAAUA,SAItBgB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUJ,UACrBO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAMJ,UACjBO,EAAAA,EAAAA,KAACnB,EAAAA,EAAM,CACHE,cAAe+D,EAAaoB,QAAQ,GACpClF,SAAUA,cAM9BO,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kCAAiCJ,SAAA,EAC5CO,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACLjJ,cAAe+D,EAAaoB,QAAQ,GACpC8B,kBAAmBA,KAEvBhG,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACLjJ,cAAe+D,EAAaoB,QAAQ,GACpC8B,kBAAmBA,8BAexE,C","sources":["ComponentOP/OPDate.js","PagesOP/OPViewMenuCard.js"],"sourcesContent":["import \"../assets/plugins/tabler-icons/tabler-icons.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { Tooltip } from \"react-tooltip\";\r\n\r\nexport const OPDate = ({ ctl_Attribute, rerender }) => {\r\n\r\n    const [l_rerender, l_setRerender] = useState(false)\r\n    const validate = OPValidations();\r\n    useEffect(() => { }, [rerender]);\r\n\r\n    const handleOnFocus = (e) => {\r\n        e.currentTarget.setCustomValidity(\"\")\r\n        ctl_Attribute.tooltip.isvalidation = true;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        ctl_Attribute.error.errorshow = false;\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    function handleOnBlur(e) {\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        ctl_Attribute.tooltip.isvalidation = false;\r\n        let err = validate(ctl_Attribute);\r\n        if (err.founderror == true) {\r\n            ctl_Attribute.error.errormsg = err.errmsg;\r\n            ctl_Attribute.error.errorshow = true;\r\n            e.currentTarget.setCustomValidity(err.errmsg)\r\n        }\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={ctl_Attribute.csstheme.id} className=\"col-form-label \">{ctl_Attribute.csstheme.labletext}{ctl_Attribute.validate.mandatory ? (<span className=\"text-danger\">&nbsp;*</span>) : null}</label>\r\n            <input\r\n                ref={(el) => {\r\n                    ctl_Attribute.tooltip.isfocus = el\r\n                    ctl_Attribute.tooltip.errorshow = el\r\n                }}\r\n                className={`${ctl_Attribute.csstheme.classname} ${ctl_Attribute.error.errorshow ? \"err-border\" : \"\"}`}\r\n                type=\"date\"\r\n                data-tooltip-content={ctl_Attribute.error.errorshow ? ctl_Attribute.error.errormsg : ctl_Attribute.csstheme.hinttext}\r\n                data-tooltip-id={ctl_Attribute.csstheme.id}\r\n                data-tooltip-place={ctl_Attribute.tooltip.place}\r\n                data-tooltip-class-name={ctl_Attribute.tooltip.classname}\r\n                readOnly={ctl_Attribute.csstheme.readonly}\r\n                id={ctl_Attribute.csstheme.id}\r\n                disabled={ctl_Attribute.csstheme.readonly}\r\n                maxLength={ctl_Attribute.csstheme.length}\r\n                onBlur={handleOnBlur}\r\n                onFocus={handleOnFocus}\r\n                value={ctl_Attribute.inputvalue}\r\n                onChange={handleOnChange}\r\n                autoComplete=\"off\"\r\n            // required={ctl_Attribute.validate.mandatory}\r\n            />\r\n            <Tooltip id={ctl_Attribute.csstheme.id} isOpen={ctl_Attribute.tooltip.isvalidation} />\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { useSelector } from 'react-redux';\r\nimport useFetch from '../ApiOP/useFetch';\r\nimport { OPNotification } from '../ComponentOP/OPNotification';\r\nimport { OPReadOnlyListTable } from '../ComponentOP/OPReadOnlyTable';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\nimport { OPDate } from '../ComponentOP/OPDate';\r\n\r\nexport const OPViewMenuCard = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n    const [notify, setNotify] = useState(false);\r\n    const [listMenu, setListMenu] = useState(true);\r\n    const [viewMenu, setViewMenu] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlNotify = useRef({})\r\n    const tbl_menuLst = useRef({})\r\n\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n    const { responseData, isLoadingApi, apiKey, fetchError, serverRequest } = useFetch();\r\n    function fnViewMenuRequest() {\r\n        let _getBody = {\r\n            companyName: getAppStoreData.companyName,\r\n        }\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/viewmenu\",\r\n            apikey: \"VIEWMENU\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n        setStartInit(false);\r\n    }\r\n\r\n    function initControl() {\r\n        if (responseData.isAuth) {\r\n            let ctlArray = [\r\n                {\r\n                    /*txt: First Name  : 0*/\r\n                    arrayindex: 0,\r\n                    csstheme: {\r\n                        labletext: \"Menu List\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_hotelname\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter your Hotel Name \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"alpha\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Last Name : 1*/\r\n                    arrayindex: 1,\r\n                    csstheme: {\r\n                        labletext: \"Price\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_Price\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the menu price \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"numeric\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:cross : 2*/\r\n                    arrayindex: 2,\r\n                    csstheme: {\r\n                        labletext: \"Cancel\",\r\n                        classname: \"btn btn-light me-2\",\r\n                        id: \"btn_cancel\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:cross : 3*/\r\n                    arrayindex: 3,\r\n                    csstheme: {\r\n                        labletext: \"Delete\",\r\n                        classname: \"btn btn-primary\",\r\n                        id: \"btn_delete\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Import Date : 4*/\r\n                    arrayindex: 4,\r\n                    csstheme: {\r\n                        labletext: \"Import Date\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_task\",\r\n                        length: 2,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Import Date \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"default\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Expiry Date : 5*/\r\n                    arrayindex: 5,\r\n                    csstheme: {\r\n                        labletext: \"Expiry Date\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_task\",\r\n                        length: 2,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Expiry Date \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"default\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n            ]\r\n            ctlAttribute.current = ctlArray;\r\n            fnBuildEmployeesList(responseData.errormsg);\r\n            setStartRender(true);\r\n            setStartLoader(false);\r\n            // setStartInit(false);\r\n\r\n        } else {\r\n            console.log(responseData.errormsg);\r\n        }\r\n    }\r\n\r\n\r\n    function fnBuildEmployeesList(resTableData) {\r\n        console.log(resTableData);\r\n        const benchlst = resTableData\r\n            .map(item => ({\r\n                _id: item._id,\r\n                showrow: true,\r\n                table_value: [\r\n                    {\r\n                        t_key: 0,\r\n                        t_value: item.menuItem,\r\n                    },\r\n                    {\r\n                        t_key: 1,\r\n                        t_value: item.price,\r\n                    },\r\n                    {\r\n                        t_key: 2,\r\n                        t_value: item.importDate,\r\n                    },\r\n                    {\r\n                        t_key: 3,\r\n                        t_value: item.ExpiryDate,\r\n                    },\r\n                ]\r\n            }))\r\n\r\n        let l_tbl_menuLst = {\r\n            tablename: \"tbl_orderlist\",\r\n            tableindex: null,\r\n            tabledataid: null,\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Item's\",\r\n                    h_width: \"150px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"Price\",\r\n                    h_width: \"43px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 2,\r\n                    h_name: \"Import Date\",\r\n                    h_width: \"43px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 3,\r\n                    h_name: \"Expiry Date\",\r\n                    h_width: \"43px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: benchlst,\r\n        };\r\n        tbl_menuLst.current = l_tbl_menuLst\r\n    }\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        switch (btn_id) {\r\n            case \"btn_cancel\":\r\n                setListMenu(true);\r\n                setViewMenu(false);\r\n                break;\r\n            case \"btn_delete\":\r\n                fnDeleteData();\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleClickTable(index) {\r\n        const menuDetial = tbl_menuLst.current.tableData[index];\r\n        tbl_menuLst.current.tableindex = index;\r\n        tbl_menuLst.current.tabledataid = menuDetial._id;\r\n        ctlAttribute.current[0].inputvalue = menuDetial.table_value[0].t_value;\r\n        ctlAttribute.current[1].inputvalue = menuDetial.table_value[1].t_value;\r\n        ctlAttribute.current[4].inputvalue = menuDetial.table_value[2].t_value;\r\n        ctlAttribute.current[5].inputvalue = menuDetial.table_value[3].t_value;\r\n        setListMenu(false);\r\n        setViewMenu(true);\r\n    }\r\n\r\n    function fnDeleteData() {\r\n        tbl_menuLst.current.tableData.splice(tbl_menuLst.current.tableindex, 1);\r\n        let _getBody = {\r\n            _id: tbl_menuLst.current.tabledataid,\r\n        }\r\n\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/deletemenu\",\r\n            apikey: \"DELMENU\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n    }\r\n\r\n    function fnDeleteMenuResult() {\r\n        if (responseData.isAuth) {\r\n            ctlNotify.current = {\r\n                name: \"Menu Deleted Successfully\",\r\n                title: responseData.errormsg.menuItem,\r\n                photo: \"success\"\r\n            }\r\n            setViewMenu(false);\r\n            setListMenu(true);\r\n            setNotify(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (startInit === true) {\r\n            fnViewMenuRequest();\r\n        } else {\r\n            if (isLoadingApi) {\r\n                switch (apiKey) {\r\n                    case \"DELMENU\":\r\n                        fnDeleteMenuResult();\r\n                        break;\r\n                    case \"VIEWMENU\":\r\n                        initControl();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [startInit, isLoadingApi]);\r\n\r\n    useEffect(() => {\r\n        if (notify) {\r\n            const closeNotify = setInterval(() => {\r\n                setNotify(false);\r\n            }, 2000);\r\n            return () => clearInterval(closeNotify);\r\n        }\r\n    }, [notify]);\r\n\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <OPNotification\r\n                            nameProps={ctlNotify.current.name}\r\n                            titleProps={ctlNotify.current.title}\r\n                            photoProps={ctlNotify.current.photo}\r\n                            bool={notify}\r\n                        />\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    View Menu list\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {listMenu &&\r\n                                        < div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                View Menu's\r\n                                                            </h5>\r\n                                                            <p>Showing menu list</p>\r\n                                                        </div>\r\n                                                        <OPReadOnlyListTable\r\n                                                            tablename={tbl_menuLst.current.tablename}\r\n                                                            actionButton={tbl_menuLst.current.actionButton}\r\n                                                            tableMetaData={tbl_menuLst.current.tableMetaData}\r\n                                                            colMetaData={tbl_menuLst.current.colMetaData}\r\n                                                            tableData={tbl_menuLst.current.tableData}\r\n                                                            handleClickTable={handleClickTable}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                    {viewMenu &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                Menu Details\r\n                                                            </h5>\r\n                                                            <p>Showing Menu Details in ReadOnly Method</p>\r\n                                                        </div>\r\n                                                        <div className=\"border-bottom mb-3\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[0]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[1]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPDate\r\n                                                                            ctl_Attribute={ctlAttribute.current[4]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPDate\r\n                                                                            ctl_Attribute={ctlAttribute.current[5]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='mt-4 d-flex justify-content-end'>\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[2]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[3]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPDate","_ref","ctl_Attribute","rerender","l_rerender","l_setRerender","useState","validate","OPValidations","useEffect","_jsxs","_Fragment","children","htmlFor","csstheme","id","className","labletext","mandatory","_jsx","ref","el","tooltip","isfocus","errorshow","classname","error","type","errormsg","hinttext","place","readOnly","readonly","disabled","maxLength","length","onBlur","e","inputvalue","currentTarget","value","isvalidation","err","founderror","errmsg","setCustomValidity","onFocus","onChange","autoComplete","Tooltip","isOpen","OPViewMenuCard","startInit","setStartInit","startRender","setStartRender","startLoader","setStartLoader","setRerender","notify","setNotify","listMenu","setListMenu","viewMenu","setViewMenu","ctlAttribute","useRef","ctlNotify","tbl_menuLst","getAppStoreData","useSelector","state","appstate","login_info","responseData","isLoadingApi","apiKey","fetchError","serverRequest","useFetch","initControl","isAuth","ctlArray","arrayindex","datatype","current","resTableData","console","log","l_tbl_menuLst","tablename","tableindex","tabledataid","tableMetaData","showPagination","showSearch","colMetaData","h_colindex","h_name","h_width","h_txtalign","h_navigate","tableData","map","item","_id","showrow","table_value","t_key","t_value","menuItem","price","importDate","ExpiryDate","fnBuildEmployeesList","handleButtonClick","splice","_getBody","serverRequestParam","method","headers","body","JSON","stringify","apiUrl","apikey","fnDeleteData","companyName","fnViewMenuRequest","name","title","photo","closeNotify","setInterval","clearInterval","OPLoader","OPNotification","nameProps","titleProps","photoProps","bool","OPReadOnlyListTable","actionButton","handleClickTable","index","menuDetial","OPTextBox","OPButton"],"sourceRoot":""}